package view.employers;

import controller.TimSanPham;
import dao.NhaCungCapDAO;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.BorderLayout;
import java.awt.event.*;
import java.util.ArrayList;
import dao.SanPhamDAO;
import java.text.DecimalFormat;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.TableColumn;



//import java.awt.event.ActionEvent;
//import java.awt.event.ActionListener;



/**
 *
 * @author hyn09
 */
public class SanPham extends javax.swing.JPanel implements ActionListener{
    private DefaultTableModel tblModel;
    DecimalFormat formatter = new DecimalFormat("###,###,###");
    
    public SanPham() {
        initComponents();
        jTable_SP.setDefaultEditor(Object.class, null);
        initTable();
        loadDataToTable();
        changeTextFind();
    }
    
    @Override
    public void actionPerformed(ActionEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
    public final void initTable() {
        tblModel = new DefaultTableModel();
        String[] headerTbl = new String[]{"Mã sản phẩm", "Tên sản phẩm", "Giá bán", "Số lượng", "Kích thước", "Chất liệu", "Mã NCC", "Xuất xứ"};
        tblModel.setColumnIdentifiers(headerTbl);
        jTable_SP.setModel(tblModel);
        jTable_SP.getColumnModel().getColumn(0).setPreferredWidth(100);
        jTable_SP.getColumnModel().getColumn(1).setPreferredWidth(200);
        jTable_SP.getColumnModel().getColumn(2).setPreferredWidth(50);
        jTable_SP.getColumnModel().getColumn(3).setPreferredWidth(20);
        jTable_SP.getColumnModel().getColumn(4).setPreferredWidth(20);        
    }

    public void loadDataToTable() {
    try {
        SanPhamDAO spdao = new SanPhamDAO();
        ArrayList<model.SanPhamModel> arms = spdao.selectAll();
        tblModel.setRowCount(0);
        for (model.SanPhamModel i : arms) {
            tblModel.addRow(new Object[]{
                    i.getMaSP(), i.getTenSP(), formatter.format(i.getGiabanSP()) + "đ", i.getSoLuongSP(),
                    i.getKichThuoc(), i.getChatLieu(), i.getMaNCC(), i.getXuatXu()
            });
        }
    } catch (Exception e) {
        System.err.println(e.toString());
        
    }
}

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        popupMenu1 = new java.awt.PopupMenu();
        jPanel1 = new javax.swing.JPanel();
        btnxoa = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        jComboBoxLuaChon = new javax.swing.JComboBox<>();
        jTextFieldSearch = new javax.swing.JTextField();
        btnThem = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();
        btnCTSP = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_SP = new javax.swing.JTable();

        popupMenu1.setLabel("popupMenu1");

        setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(230, 255, 243));

        btnxoa.setBackground(new java.awt.Color(32, 178, 170));
        btnxoa.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnxoa.setForeground(new java.awt.Color(255, 255, 255));
        btnxoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/iconxoa1.png"))); // NOI18N
        btnxoa.setText("Xóa");
        btnxoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnxoaActionPerformed(evt);
            }
        });

        btnSua.setBackground(new java.awt.Color(32, 178, 170));
        btnSua.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnSua.setForeground(new java.awt.Color(255, 255, 255));
        btnSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/iconsua1.png"))); // NOI18N
        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        jComboBoxLuaChon.setBackground(new java.awt.Color(32, 178, 170));
        jComboBoxLuaChon.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jComboBoxLuaChon.setForeground(new java.awt.Color(255, 255, 255));
        jComboBoxLuaChon.setMaximumRowCount(4);
        jComboBoxLuaChon.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tất cả", "Mã sản phẩm", "Tên sản phẩm", "Giá Bán", "Số lượng", "Chất liệu", "Kích thước", "Mã NCC", "Xuất xứ" }));
        jComboBoxLuaChon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxLuaChonActionPerformed(evt);
            }
        });
        jComboBoxLuaChon.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jComboBoxLuaChonPropertyChange(evt);
            }
        });

        jTextFieldSearch.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jTextFieldSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldSearchActionPerformed(evt);
            }
        });
        jTextFieldSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldSearchKeyReleased(evt);
            }
        });

        btnThem.setBackground(new java.awt.Color(32, 178, 170));
        btnThem.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnThem.setForeground(new java.awt.Color(255, 255, 255));
        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icondaucong.png"))); // NOI18N
        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnRefresh.setBackground(new java.awt.Color(32, 178, 170));
        btnRefresh.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnRefresh.setForeground(new java.awt.Color(255, 255, 255));
        btnRefresh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/iconlammoi2.png"))); // NOI18N
        btnRefresh.setText("Làm mới");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        btnCTSP.setBackground(new java.awt.Color(32, 178, 170));
        btnCTSP.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnCTSP.setForeground(new java.awt.Color(255, 255, 255));
        btnCTSP.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/iconxem.png"))); // NOI18N
        btnCTSP.setText("Xem chi tiết");
        btnCTSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCTSPActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(btnThem)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnxoa, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCTSP)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 77, Short.MAX_VALUE)
                .addComponent(jComboBoxLuaChon, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnRefresh)
                .addGap(40, 40, 40))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(30, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnxoa, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxLuaChon, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCTSP, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30))
        );

        jTable_SP.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable_SP.setRowHeight(30);
        jTable_SP.setSelectionBackground(new java.awt.Color(255, 255, 255));
        jTable_SP.setShowGrid(true);
        jScrollPane1.setViewportView(jTable_SP);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 537, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
   
    private void jComboBoxLuaChonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxLuaChonActionPerformed
        // TODO add your handling code here:
        String luaChon = jComboBoxLuaChon.getSelectedItem().toString();
        String content = jTextFieldSearch.getText();
        ArrayList<model.SanPhamModel> result = searchFn(luaChon, content);
        loadDataToTableSearch(result);
    }//GEN-LAST:event_jComboBoxLuaChonActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
        JFrame parentFrame = (JFrame) SwingUtilities.getWindowAncestor(SanPham.this);
        ThemSP dialog = new ThemSP(this, parentFrame, true);
        dialog.setVisible(true);
    }//GEN-LAST:event_btnThemActionPerformed

    private void jTextFieldSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldSearchActionPerformed
        // TODO add your handling code here:
        String luaChon = jComboBoxLuaChon.getSelectedItem().toString();
        String content = jTextFieldSearch.getText();
        ArrayList<model.SanPhamModel> result = searchFn(luaChon, content);
        loadDataToTableSearch(result);
    }//GEN-LAST:event_jTextFieldSearchActionPerformed

    private void btnxoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnxoaActionPerformed
        // TODO add your handling code here:
        if (jTable_SP.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn sản phẩm muốn xoá");
        } else {
            int output = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn xoá sản phẩm", "Xác nhận xoá sản phẩm", JOptionPane.YES_NO_OPTION);
            if (output == JOptionPane.YES_OPTION) {
                SanPhamDAO.getInstance().delete(getSanPhamSelect());
                JOptionPane.showMessageDialog(this, "Xóa thành công !");
                loadDataToTable();
            }
        }
    }//GEN-LAST:event_btnxoaActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        // TODO add your handling code here:
       if (jTable_SP.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn sản phẩm cần sửa");
        } else {
            JFrame parentFrame = (JFrame) SwingUtilities.getWindowAncestor(SanPham.this);
            SuaSP dialog = new SuaSP(this,parentFrame, true);
            dialog.setVisible(true);
        }
    }//GEN-LAST:event_btnSuaActionPerformed

    private void jTextFieldSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldSearchKeyReleased
        // TODO add your handling code here:
        String luaChon = jComboBoxLuaChon.getSelectedItem().toString();
        String content = jTextFieldSearch.getText();
        ArrayList<model.SanPhamModel> result = searchFn(luaChon, content);
        loadDataToTableSearch(result);
    }//GEN-LAST:event_jTextFieldSearchKeyReleased

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        // TODO add your handling code here:
        jComboBoxLuaChon.setSelectedIndex(0);
        loadDataToTable();
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void btnCTSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCTSPActionPerformed
        // TODO add your handling code here:
        if (jTable_SP.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn sản phẩm !");
        } else {
            JFrame parentFrame = (JFrame) SwingUtilities.getWindowAncestor(SanPham.this);
            XemCTSP dialog = new XemCTSP(this, parentFrame, true);
            dialog.setVisible(true);
        }
    }//GEN-LAST:event_btnCTSPActionPerformed

    private void jComboBoxLuaChonPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jComboBoxLuaChonPropertyChange
        // TODO add your handling code here:
        String luaChon = jComboBoxLuaChon.getSelectedItem().toString();
        String content = jTextFieldSearch.getText();
        ArrayList<model.SanPhamModel> result = searchFn(luaChon, content);
        loadDataToTableSearch(result);
    }//GEN-LAST:event_jComboBoxLuaChonPropertyChange

    public ArrayList<model.SanPhamModel> searchFn(String luaChon, String content) {
        ArrayList<model.SanPhamModel> result = new ArrayList<>();
        TimSanPham timSP = new TimSanPham();
        switch (luaChon) {
            case "Tất cả":
                result = timSP.searchTatCa(content);
                break;
            case "Mã sản phẩm":
                result = timSP.searchMaSP(content);
                break;
            case "Tên sản phẩm":
                result = timSP.searchTenSP(content);
                break;
            case "Giá bán":
                result = timSP.searchGiaSP(content);
                break;
            case "Số lượng":
                result = timSP.searchSoLuongSP(content);
                break;
             case "Chất liệu":
                result = timSP.searchChatLieuSP(content);
                break;
             case "Kích thước":
                result = timSP.searchKichThuocSP(content);
                break;
             case "Mã NCC":
                result = timSP.searchMaNCCSP(content);
                break;
            case "Xuất xứ":
                result = timSP.searchXuatXuSP(content);
                break;
        }
        return result;
    }
   
    public model.SanPhamModel getDetail() {
        model.SanPhamModel a = SanPhamDAO.getInstance().selectById(getSanPhamSelect().getMaSP());
        return a;
    }

    public model.SanPhamModel getSanPhamSelect() {
        int i_row = jTable_SP.getSelectedRow();
        model.SanPhamModel sp = SanPhamDAO.getInstance().selectAll().get(i_row);
        return sp;
    }

    public void loadDataToTableSearch(ArrayList<model.SanPhamModel> result) {
        try {
            tblModel.setRowCount(0);
            for (model.SanPhamModel i : result) {
                tblModel.addRow(new Object[]{
                    i.getMaSP(), i.getTenSP(),formatter.format(i.getGiabanSP()) + "đ", i.getSoLuongSP(), i.getKichThuoc(), i.getChatLieu(), i.getMaNCC() ,i.getXuatXu()
                });
            }
        } catch (Exception e) {  
        }
    }

    public void changeTextFind() {
        jTextFieldSearch.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {

            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                /* do nothing */
                if (jTextFieldSearch.getText().length() == 0) {
                    loadDataToTable();
                }
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                /* do nothing */

            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCTSP;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnxoa;
    private javax.swing.JComboBox<String> jComboBoxLuaChon;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable_SP;
    private javax.swing.JTextField jTextFieldSearch;
    private java.awt.PopupMenu popupMenu1;
    // End of variables declaration//GEN-END:variables
}
